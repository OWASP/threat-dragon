# Add MacOS Runner
# Get a SHA256 of the installer (different extension per platform, shasum -a256)
# Eventually publish the images?
# Add artifacts for release step
# Only run on tags

name: Build/Release Desktop
on:
  push:
    branches: [ feature/112-automate-release-process ] # TODO: Change to main, maybe not on push but on tags?
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: td.desktop
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: 14.x

    - name: Cache NPM dir
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-npm-cache-server-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-cache-server-

    - run: npm ci
    - run: npm run build
    - run: npm run pretest
    - run: |
        export DISPLAY=':99.0'
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        npm run test
  
  release:
    runs-on: ${{ matrix.config.os }}
    # TODO: Just speeding it up
    # needs: [test]
    strategy:
      matrix:
        config:
          - { os: macos-latest, os_short: osx }
          - { os: ubuntu-latest, os_short: lin }
          - { os: windows-latest, os_short: win }
    defaults:
      run:
        working-directory: td.desktop

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        # Only install Snapcraft on Ubuntu
        if: startsWith(matrix.config.os, 'ubuntu')
        with:
          # Log in to Snap Store
          snapcraft_token: ${{ secrets.snapcraft_token }}

      - run: npm ci
      - run: npm run build
      - shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run build:${{ matrix.config.os_short }} -- --publish always
      



  # build-linux:
  #   runs-on: ubuntu-latest
  #   needs: [unit-tests]
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: td.desktop
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Use Node.js 14.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14.x

  #     - name: Cache NPM dir
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-npm-cache-server-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-npm-cache-server-

  #     - run: npm ci
  #     - run: npm run build
  #     - shell: bash
  #       env:
  #         GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #       run: npm run build:lin

  #     - name: Upload installers
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: linux
  #         path: |
  #           td.desktop/installers/*.AppImage
  #           td.desktop/installers/*.rpm
  #           td.desktop/installers/*.deb
  #           td.desktop/installers/*.snap
  
  # build-windows:
  #   runs-on: windows-latest
  #   needs: [unit-tests]
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: td.desktop
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Use Node.js 14.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14.x

  #     - name: Cache NPM dir
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-npm-cache-server-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-npm-cache-server-

  #     - run: npm ci
  #     - run: npm run build
  #     - shell: bash
  #       env:
  #         GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #       run: npm run build:win

  #     - name: Upload installers
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: windows
  #         path: td.desktop/installers/*.exe

  # build-macos:
  #   runs-on: macos-latest
  #   needs: [unit-tests]
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: td.desktop
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Use Node.js 14.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14.x

  #     - name: Cache NPM dir
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-npm-cache-server-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-npm-cache-server-

  #     - run: npm ci
  #     - run: npm run build
  #     - shell: bash
  #       env:
  #         GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #       run: npm run build:osx

  #     - name: Upload installers
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: macos
  #         path: td.desktop/installers/*.dmg
