# these keys are used to protect communication between the application and the server
# you should generate unique values for each key using the command 'openssl rand -hex 16'
ENCRYPTION_KEYS='[{"isPrimary": true, "id": 0, "value": "0123456789abcdef0123456789abcdef0123456"}]'
ENCRYPTION_JWT_SIGNING_KEY=0123456789abcdef0123456789abcdef0123456
ENCRYPTION_JWT_REFRESH_SIGNING_KEY=0123456789abcdef0123456789abcdef0123456

# optional runtime environment specifier
# valid values are 'production', 'development', 'test', 'simulated_production'
# non-production environments change some URL paths and environment variable defaults
# default is production
NODE_ENV=production

# Express API server configuration
# optional, determines whether the server will use https when checking application health
# may need to use https if the application is hosted behind a TLS proxy or load balancer
# valid values are 'http' or 'https', default is 'https'
SERVER_API_PROTOCOL=https

# optional, allows control of the port that the server listens on, default is 3000
SERVER_API_PORT=3000

# deprecated but maintained for backwards compatibility
# old name for SERVER_API_PORT
# ignored when SERVER_API_PORT is used, default is 3000
# PORT=3000

# configuration settings for running the application behind a proxy or load balancer
# optional, allows proxy/load balancer TLS subject name to differ from local hostname
# setting this correctly to the proxy/LB name will avoid "invalid host header" errors
PROXY_HOSTNAME=threatdragon.example.com

# List of trusted proxies for express-rate-limit
# optional, comma-separated list, can use dotted quad ('127.0.0.1') or CIDR ('192.168.0.0/16') format
# Only set IPs that you control like load balancers or reverse proxies (internal address)
#TRUST_PROXY_LIST=127.0.0.1

# front-end application configuration
# optional FQDN hostname; default is localhost
# required if using TLS locally (used to valid certificate subject name)
APP_HOSTNAME=threatdragon.example.com

# optional network port for front-end application, required if using TLS
# using a port < 1024 requires granting the cap_net_bind_service capability to the node binary
APP_PORT=8080

# required to enable TLS, omit for http
# APP_USE_TLS=true

# required to enable TLS, omit for http
# node executable must have RO access to these two files
# APP_TLS_CERT_PATH=/path/to/certificate.pem
# APP_TLS_KEY_PATH=/path/to/privatekey.pem

# root directory where threat models are stored in git-based repositories
# default is directly in the root of the repo
# provider-specific PROVIDER_REPO_ROOT_DIRECTORY values override this one
# REPO_ROOT_DIRECTORY=ThreatDragonModels

# configuration needed to use BitBucket auth and storage
# modifying BITBUCKET_SCOPE may cause the provider to malfunction
# obtain other values from BitBucket
# BITBUCKET_SCOPE=repository:write
# BITBUCKET_CLIENT_ID=01234567890123456789
# BITBUCKET_CLIENT_SECRET=0123456789abcdef0123456789abcdef0123456
# BITBUCKET_WORKSPACE=workspace_name
# BITBUCKET_REPO_ROOT_DIRECTORY=ThreatDragonModels

# configuration needed to use GitHub auth and storage
# modifying the GITHUB_SCOPE may cause the provider to malfunction
# obtain other values from GitHub
# GITHUB_SCOPE=public_repo
# GITHUB_CLIENT_ID=01234567890123456789
# GITHUB_CLIENT_SECRET=0123456789abcdef0123456789abcdef0123456
# GITHUB_ENTERPRISE_HOSTNAME=optional_if_using_enterprise
# GITHUB_ENTERPRISE_PORT=optional_if_enterprise_and_non_standard
# GITHUB_ENTERPRISE_PROTOCOL=optional_if_enterprise_and_non_standard
# GITHUB_REPO_ROOT_DIRECTORY=ThreatDragonModels

# configuration needed to use GitLab auth and storage
# modifying the GITLAB_SCOPE may cause the provider to malfunction
# obtain other values from GitLab
# GITLAB_SCOPE="read_user write_repository profile read_api api"
# GITLAB_CLIENT_ID=01234567890123456789
# GITLAB_CLIENT_SECRET=0123456789abcdef0123456789abcdef0123456
# GITLAB_REDIRECT_URI=http://localhost:3000/api/oauth/return
# GITLAB_REPO_ROOT_DIRECTORY=ThreatDragonModels

# configuration needed to use Google auth ("Login with Google")
# Obtain these values here: https://console.cloud.google.com/auth/overview
# GOOGLE_CLIENT_ID=01234567890123456789
# GOOGLE_CLIENT_SECRET=0123456789abcdef0123456789abcdef0123456
# GOOGLE_REDIRECT_URI=http://localhost:3000/api/oauth/return
# redirect URI stem must match the load balancer or proxy name if LB/proxy is terminating TLS

# configuration needed for Google Drive storage provider 
# API Keys are obtained here: https://console.cloud.google.com/apis/credentials
# VUE_APP_GOOGLE_API_KEY=abcdef123456789abcdef0123456789abcdef0123456
# VUE_APP_GOOGLE_CLIENT_ID=01234567890123456789
# Note: If VUE_APP_GOOGLE_CLIENT_ID is not set, it will default to using GOOGLE_CLIENT_ID value
# VUE_APP_GOOGLE_APP_ID=012345678901

# Configuration for the Terms of Service and Privacy Policy pages
# These values are displayed to users in the pages Google requires for production API usage
# VUE_APP_OPERATOR_NAME="Example Company Name" # Name of the organization running this Threat Dragon instance
# VUE_APP_OPERATOR_CONTACT="contact-email@example.com" # Contact information for the organization